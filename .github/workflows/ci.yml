name: CI Pipeline

on:
  push:
    branches: [main, staging, feature/**]
  pull_request:
    branches: [main, staging]

jobs:
  checks:
    name: 🧪 Lint, Test, Build, Docker
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: 🧹 Clean Prisma Artifacts
        run: |
          rm -rf node_modules/.prisma
          rm -rf node_modules/@prisma/client

      - name: 🚫 Skip postinstall in CI
        run: npm config set ignore-scripts true

      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps

      - name: 🔧 Run Prisma Generate
        run: npx prisma generate

      - name: 🧼 Run ESLint
        run: npm run lint

      - name: 🧪 Run Unit Tests
        run: npm run test

      - name: 🔨 TypeScript Build
        run: npm run build

      - name: 🐶 Run Lint-Staged Hooks
        run: npm run lint:staged

      - name: 🐳 Build Docker Image (prod)
        run: npm run docker:prod:build

  block-main-direct-push:
    name: 🚫 Prevent direct push to main
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - run: |
          echo "Direct pushes to main are not allowed. Use a pull request."
          exit 1

  block-prod-direct-push:
    name: 🚫 Prevent direct push to staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    steps:
      - run: |
          echo "Direct pushes to staging are not allowed. Use a pull request."
          exit 1
