FROM node:22-alpine AS builder

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy only the necessary files first for caching
COPY package.json pnpm-lock.yaml* ./
COPY prisma ./prisma/
COPY .env* ./

# Install dependencies
RUN pnpm install

# Copy remaining application files
COPY . .

# Build the application
RUN pnpm run build

# -----------------------------

FROM node:22-alpine

# Install pnpm in runtime image
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy files from builder
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/.env* ./ 

EXPOSE ${PORT}
CMD [ "pnpm", "run", "start:prod" ]
