name: nest-starter-prod

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api
    env_file: .env.prod
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_URL: postgresql://${DATABASE_USERNAME:-postgres}:${DATABASE_PASSWORD:-postgres}@postgres:${DATABASE_PORT:-5432}/${DATABASE_NAME:-starter}
    ports:
      - '${EXTERNAL_PORT:-3000}:${INTERNAL_PORT:-3000}'
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://127.0.0.1:3000/', r => process.exit(r.statusCode===200?0:1)).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - nest-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: prisma-migrate
    env_file: .env.prod
    environment:
      DATABASE_URL: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@postgres:${DATABASE_PORT:-5432}/${DATABASE_NAME}
    working_dir: /app
    command: ['sh', '-c', './node_modules/.bin/prisma migrate deploy']
    depends_on:
      postgres:
        condition: service_healthy
    restart: 'no'
    networks:
      - nest-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    ports:
      - '${DATABASE_PORT:-5432}:5432'
    env_file: .env.prod
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nest-network

volumes:
  postgres-data:

networks:
  nest-network:
    driver: bridge
